
import 'package:hive/hive.dart';

part 'phrase.g.dart';

@HiveType(typeId: 16)
class Phrase {
  @HiveField(0)
  final String key;

  @HiveField(1)
  final String value;

  @HiveField(2)
  final bool canEdit;

  const Phrase(this.key, this.value, {this.canEdit = false});
}

List<Phrase> mergePhraseLists(List<Phrase> basePhrases, List<Phrase> additionalPhrases) {
  Set<String> baseKeys = basePhrases.map((phrase) => phrase.key).toSet();

  List<Phrase> mergedList = List.from(basePhrases);

  for (Phrase phrase in additionalPhrases) {
    if (!baseKeys.contains(phrase.key)) {
      mergedList.add(phrase);
    }
  }

  return mergedList;
}

const List<Phrase> xDaoPhrases = [
  Phrase('|∀ﾟ', '|∀ﾟ'),
  Phrase('(´ﾟДﾟ`)', '(´ﾟДﾟ`)'),
  Phrase('(;´Д`)', '(;´Д`)'),
  Phrase('(｀･ω･)', '(｀･ω･)'),
  Phrase('(=ﾟωﾟ)=', '(=ﾟωﾟ)='),
  Phrase('| ω・´)', '| ω・´)'),
  Phrase('|-` )', '|-` )'),
  Phrase('|д` )', '|д` )'),
  Phrase('|ー` )', '|ー` )'),
  Phrase('|∀` )', '|∀` )'),
  Phrase('(つд⊂)', '(つд⊂)'),
  Phrase('(ﾟДﾟ≡ﾟДﾟ)', '(ﾟДﾟ≡ﾟДﾟ)'),
  Phrase('(＾o＾)ﾉ', '(＾o＾)ﾉ'),
  Phrase('(|||ﾟДﾟ)', '(|||ﾟДﾟ)'),
  Phrase('( ﾟ∀ﾟ)', '( ﾟ∀ﾟ)'),
  Phrase('( ´∀`)', '( ´∀`)'),
  Phrase('(*´∀`)', '(*´∀`)'),
  Phrase('(*ﾟ∇ﾟ)', '(*ﾟ∇ﾟ)'),
  Phrase('(*ﾟーﾟ)', '(*ﾟーﾟ)'),
  Phrase('(　ﾟ 3ﾟ)', '(　ﾟ 3ﾟ)'),
  Phrase('( ´ー`)', '( ´ー`)'),
  Phrase('( ・_ゝ・)', '( ・_ゝ・)'),
  Phrase('( ´_ゝ`)', '( ´_ゝ`)'),
  Phrase('(*´д`)', '(*´д`)'),
  Phrase('(・ー・)', '(・ー・)'),
  Phrase('(・∀・)', '(・∀・)'),
  Phrase('(ゝ∀･)', '(ゝ∀･)'),
  Phrase('(〃∀〃)', '(〃∀〃)'),
  Phrase('(*ﾟ∀ﾟ*)', '(*ﾟ∀ﾟ*)'),
  Phrase('( ﾟ∀。)', '( ﾟ∀。)'),
  Phrase('( `д´)', '( `д´)'),
  Phrase('(`ε´ )', '(`ε´ )'),
  Phrase('(`ヮ´ )', '(`ヮ´ )'),
  Phrase('σ`∀´)', 'σ`∀´)'),
  Phrase(' ﾟ∀ﾟ)σ', ' ﾟ∀ﾟ)σ'),
  Phrase('ﾟ ∀ﾟ)ノ', 'ﾟ ∀ﾟ)ノ'),
  Phrase('(╬ﾟдﾟ)', '(╬ﾟдﾟ)'),
  Phrase('(|||ﾟдﾟ)', '(|||ﾟдﾟ)'),
  Phrase('( ﾟдﾟ)', '( ﾟдﾟ)'),
  Phrase('Σ( ﾟдﾟ)', 'Σ( ﾟдﾟ)'),
  Phrase('( ;ﾟдﾟ)', '( ;ﾟдﾟ)'),
  Phrase('( ;´д`)', '( ;´д`)'),
  Phrase('(　д ) ﾟ ﾟ', '(　д ) ﾟ ﾟ'),
  Phrase('( ☉д⊙)', '( ☉д⊙)'),
  Phrase('(((　ﾟдﾟ)))', '(((　ﾟдﾟ)))'),
  Phrase('( ` ・´)', '( ` ・´)'),
  Phrase('( ´д`)', '( ´д`)'),
  Phrase('( -д-)', '( -д-)'),
  Phrase('(>д<)', '(>д<)'),
  Phrase('･ﾟ( ﾉд`ﾟ)', '･ﾟ( ﾉд`ﾟ)'),
  Phrase('( TдT)', '( TдT)'),
  Phrase('(￣∇￣)', '(￣∇￣)'),
  Phrase('(￣3￣)', '(￣3￣)'),
  Phrase('(￣ｰ￣)', '(￣ｰ￣)'),
  Phrase('(￣ . ￣)', '(￣ . ￣)'),
  Phrase('(￣皿￣)', '(￣皿￣)'),
  Phrase('(￣艸￣)', '(￣艸￣)'),
  Phrase('(￣︿￣)', '(￣︿￣)'),
  Phrase('(￣︶￣)', '(￣︶￣)'),
  Phrase('ヾ(´ωﾟ｀)', 'ヾ(´ωﾟ｀)'),
  Phrase('(*´ω`*)', '(*´ω`*)'),
  Phrase('(・ω・)', '(・ω・)'),
  Phrase('( ´・ω)', '( ´・ω)'),
  Phrase('(｀・ω)', '(｀・ω)'),
  Phrase('(´・ω・`)', '(´・ω・`)'),
  Phrase('(`・ω・´)', '(`・ω・´)'),
  Phrase('( `_っ´)', '( `_っ´)'),
  Phrase('( `ー´)', '( `ー´)'),
  Phrase('( ´_っ`)', '( ´_っ`)'),
  Phrase('( ´ρ`)', '( ´ρ`)'),
  Phrase('( ﾟωﾟ)', '( ﾟωﾟ)'),
  Phrase('(oﾟωﾟo)', '(oﾟωﾟo)'),
  Phrase('(　^ω^)', '(　^ω^)'),
  Phrase('(｡◕∀◕｡)', '(｡◕∀◕｡)'),
  Phrase('/( ◕‿‿◕ )\\', '/( ◕‿‿◕ )\\'),
  Phrase('ヾ(´ε`ヾ)', 'ヾ(´ε`ヾ)'),
  Phrase('(ノﾟ∀ﾟ)ノ', '(ノﾟ∀ﾟ)ノ'),
  Phrase('(σﾟдﾟ)σ', '(σﾟдﾟ)σ'),
  Phrase('(σﾟ∀ﾟ)σ', '(σﾟ∀ﾟ)σ'),
  Phrase('|дﾟ )', '|дﾟ )'),
  Phrase('┃電柱┃', '┃電柱┃'),
  Phrase('ﾟ(つд`ﾟ)', 'ﾟ(つд`ﾟ)'),
  Phrase('ﾟÅﾟ )　', 'ﾟÅﾟ )　'),
  Phrase('⊂彡☆))д`)', '⊂彡☆))д`)'),
  Phrase('⊂彡☆))д´)', '⊂彡☆))д´)'),
  Phrase('⊂彡☆))∀`)', '⊂彡☆))∀`)'),
  Phrase('(´∀((☆ミつ', '(´∀((☆ミつ'),
  Phrase('･ﾟ( ﾉヮ´ )', '･ﾟ( ﾉヮ´ )'),
  Phrase('(ﾉ)`ω´(ヾ)', '(ﾉ)`ω´(ヾ)'),
  Phrase('ᕕ( ᐛ )ᕗ', 'ᕕ( ᐛ )ᕗ'),
  Phrase('(　ˇωˇ)', '(　ˇωˇ)'),
  Phrase('( ｣ﾟДﾟ)｣＜', '( ｣ﾟДﾟ)｣＜'),
  Phrase('( ›´ω`‹ )', '( ›´ω`‹ )'),
  Phrase('(;´ヮ`)7', '(;´ヮ`)7'),
  Phrase('(`ゥ´ )', '(`ゥ´ )'),
  Phrase('(`ᝫ´ )', '(`ᝫ´ )'),
  Phrase('( ᑭ`д´)ᓀ))д´)ᑫ', '( ᑭ`д´)ᓀ))д´)ᑫ'),
  Phrase('σ( ᑒ )', 'σ( ᑒ )'),
  Phrase('齐齐蛤尔', '(`ヮ´ )σ`∀´) ﾟ∀ﾟ)σ'),
  Phrase('大嘘', '''吁~~~~　　rnm，退钱！
 　　　/　　　/ 
(　ﾟ 3ﾟ) `ー´) `д´) `д´)'''),
  Phrase('防剧透', '[h] [/h]'),
  Phrase('全角空格', '　'),
  Phrase('･ﾟ( ﾉヮ´ )', '･ﾟ( ﾉヮ´ )'),
  Phrase('( ´_ゝ`)旦', '( ´_ゝ`)旦'),
  Phrase('(<ゝω・) ☆', '(<ゝω・) ☆'),
  Phrase('(`ε´ (つ*⊂)', '(`ε´ (つ*⊂)'),
  Phrase(
      "=͟͟͞͞( 'ヮ' 三 'ヮ' =͟͟͞͞)", "=͟͟͞͞( 'ヮ' 三 'ヮ' =͟͟͞͞)"),
  Phrase('↙(`ヮ´ )↗ 开摆！', '↙(`ヮ´ )↗ 开摆！'),
  Phrase('(っ˘Д˘)ノ<', '(っ˘Д˘)ノ<'),
  Phrase('(ﾉ#)`д´)σ', '(ﾉ#)`д´)σ'),
  Phrase('₍₍(ง`ᝫ´ )ว⁾', '₍₍(ง`ᝫ´ )ว⁾'),
  Phrase('( `ᵂ´)', '( `ᵂ´)'),
  Phrase('( *・ω・)✄╰ひ╯', '( *・ω・)✄╰ひ╯'),
  Phrase('U•ェ•*U', 'U•ェ•*U'),
  Phrase('⊂( ﾟωﾟ)つ', '⊂( ﾟωﾟ)つ'),
  Phrase('( ﾟ∀。)7', '( ﾟ∀。)7'),
  Phrase('･ﾟ( ﾟ∀。) ﾟ。', '･ﾟ( ﾟ∀。) ﾟ。'),
  Phrase('( `д´)σ', '( `д´)σ'),
  Phrase('( ﾟᯅ 。)', '( ﾟᯅ 。)'),
  Phrase('( ;`д´; )', '( ;`д´; )'),
  Phrase('m9( `д´)', 'm9( `д´)'),
  Phrase('( ﾟπ。)', '( ﾟπ。)'),
  Phrase('ᕕ( ﾟ∀。)ᕗ', 'ᕕ( ﾟ∀。)ᕗ'),
  Phrase('ฅ(^ω^ฅ)', 'ฅ(^ω^ฅ)'),
  Phrase('(|||^ヮ^)', '(|||^ヮ^)'),
  Phrase('(|||ˇヮˇ)', '(|||ˇヮˇ)'),
  Phrase('(　↺ω↺)', '(　↺ω↺)'),
  Phrase(' `ー´) `д´) `д´)', ' `ー´) `д´) `д´)'),
  Phrase('接☆龙☆大☆成☆功', '接☆龙☆大☆成☆功'),
  Phrase('ᑭ`д´)ᓀ ∑ᑭ(`ヮ´ )ᑫ', 'ᑭ`д´)ᓀ ∑ᑭ(`ヮ´ )ᑫ'),
  Phrase('乚 (^ω^ ﾐэ)Э好钩我咬', '乚 (^ω^ ﾐэ)Э好钩我咬'),
  Phrase('乚(`ヮ´  ﾐэ)Э', '乚(`ヮ´  ﾐэ)Э'),
  Phrase('( ﾟ∀。ﾐэ)Э三三三三　乚', '( ﾟ∀。ﾐэ)Э三三三三　乚'),
  Phrase('(ˇωˇ ﾐэ)Э三三三三　乚', '(ˇωˇ ﾐэ)Э三三三三　乚'),
  Phrase('( へ ﾟ∀ﾟ)べ摔低低', '( へ ﾟ∀ﾟ)べ摔低低'),
  Phrase('(ベ ˇωˇ)べ 摔低低', '(ベ ˇωˇ)べ 摔低低'),
  Phrase('呼伦悲尔', '( ﾉд`ﾟ);´д`) ´_ゝ`) '),
  Phrase('鄂尔多厮', 'Σ( ﾟдﾟ)´ﾟДﾟ)　ﾟдﾟ)))'),
  Phrase('智利', '( ﾟ∀。)∀。)∀。)'),
  Phrase('阴山山脉', '(　ˇωˇ )◕∀◕｡)^ω^)'),
  Phrase('F5欧拉', r'''　σ　σ
σ(　´ρ`)σ[F5]
　σ　σ
'''),
  Phrase('UK酱', r'''\ ︵
ᐕ)⁾⁾
'''),
  Phrase('白羊', r'''╭◜◝ ͡ ◜◝ J J
(　　　　 `д´) 　“咩！”
╰◟д ◞ ͜ ◟д◞
'''),
  Phrase('兔兔', r'''     /)　/)
c(　╹^╹)
'''),
  Phrase('neko', r"""　　       　∧,,　
　　　　ヾ ｀. ､`フ
　　　(,｀'´ヽ､､ﾂﾞ
　 (ヽｖ'　　　`''ﾞつ
　　,ゝ　 ⌒`ｙ'''´
　 （ (´＾ヽこつ
　　 ) )
　　(ノ
"""),
  Phrase('给你', r'''（\_/）
(・_・)
 / 　>'''),
  Phrase('举高高', r'''　　　　_∧＿∧_ 　　　　
            ((∀｀/ 　) 　　
　       /⌒　　 ／ 　　
         /(__ノ＼_ノ 　　
          (_ノ ||| 举高高~~
　∧＿∧　∧＿∧
 (( ・∀・ ))・∀・) )
 `＼　　 ∧ 　　ノ
　/　　｜/　　｜
（＿ノ＿)_ノL＿)
'''),
  Phrase('举糕糕', r'''举糕糕~
　　☆☆☆☆☆☆☆☆
 　╭┻┻┻┻┻┻┻┻╮
 　┃╱╲╱╲╱╲╱╲┃
 ╭┻━━━━━━━━┻╮
 ┃╱╲╱╲╱╲╱╲╱╲┃
 ┗━━━━━━━━━━┛
 　　　∧＿∧　∧＿∧
　　(( ・∀・ ))・∀・) )
 　　`＼　　 ∧ 　　ノ
　　　/　　｜/　　｜
 　　（＿ノ＿)_ノL＿)
'''),
  Phrase('Happy肥肥Day', r'''. 　　　　   　.★ * ★.. 　
 　.*★　*.　*..*　　　★ 　
 　★　　　　　　 ★ 　　
     ‘*. *'　 ʜᴀᴘᴘʏ 肥肥 ᴅᴀʏ 　　　
         ‘★.　　 ★’ 　　　　 　　
               ‘*..★
┊┊┊┊☆☆☆☆☆☆☆☆┊┊┊┊
┊┊┊╭┻┻┻┻┻┻┻┻╮┊┊┊
┊┊┊┃╱╲╱╲╱╲╱╲┃┊┊┊
┊┊╭┻━━━━━━━━┻╮┊┊
┊┊┃╱╲╱╲╱╲╱╲╱╲┃┊┊
╱▔┗━━━━━━━━━━┛▔╲
'''),
  Phrase('举高高2', r'''              _∧＿∧_
　　　 ((∀｀/ 　)
　　　 /⌒　　 ／
　 /(__ノ＼_ノ(((ヽ
　(_ノ　 　￣Ｙ＼
|　(＼　(\　 /)　 ｜ )举高高！
ヽ　ヽ` ( ﾟ∀ﾟ ) _ノ /
　＼ |　⌒Ｙ⌒　/ /
　 ｜ヽ · ｜ · ﾉ ／/
　 ＼トー仝ーイ
　　 ｜ ミ土彡/
　　　). \ °　 /
　　　( 　\. y 　\
'''),
  Phrase('催更喵gkd', r'''　　　　　　＿＿＿
　　　　　／＞　　フ
　　　　　|  　_　 _ l 我是一只催更的
　 　　　／` ミ＿xノ 喵喵酱
　　 　 /　　　 　 | gkdgkd
　　　 /　 ヽ　　 ﾉ
　 　 │　　|　|　|
　／￣|　　 |　|　|
　| (￣ヽ＿_ヽ_)__)
　＼二つ
'''),
  Phrase('巴拉巴拉', r'''　∧＿∧
（｡･ω･｡)つ━☆・*。
 ⊂　　 ノ 　　　・゜+.
　しーＪ　　　°。+ *´¨)
　　　 　　.· ´¸.·*´¨) ¸.·*¨)
　　　　　　　 　(¸.·´ (¸.·’*
'''),
];
